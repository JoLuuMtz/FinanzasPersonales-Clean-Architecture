// <auto-generated />
using System;
using FinanciasPersonalesApiRest.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinanciasPersonalesApiRest.Migrations
{
    [DbContext(typeof(FinaciasPersonales))]
    [Migration("20241218203832_CreatedDBFinancesPersonales")]
    partial class CreatedDBFinancesPersonales
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinanciasPersonalesApiRest.Models.Budget", b =>
                {
                    b.Property<int>("IdBudget")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBudget"));

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalBudget")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdBudget");

                    b.HasIndex("IdUser");

                    b.ToTable("Budget");
                });

            modelBuilder.Entity("FinanciasPersonalesApiRest.Models.BudgetCategory", b =>
                {
                    b.Property<int>("IdBudgetCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBudgetCategory"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BudgetIdBudget")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdBudgetCategory");

                    b.HasIndex("BudgetIdBudget");

                    b.ToTable("BudgetCategory");
                });

            modelBuilder.Entity("FinanciasPersonalesApiRest.Models.Income", b =>
                {
                    b.Property<int>("IdIncome")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdIncome"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateIncome")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("IdTypeIncome")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdIncome");

                    b.HasIndex("IdTypeIncome");

                    b.HasIndex("IdUser");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("FinanciasPersonalesApiRest.Models.Spend", b =>
                {
                    b.Property<int>("IdSpend")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSpend"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateSpend")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("IdTypeSpend")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSpend");

                    b.HasIndex("IdTypeSpend");

                    b.HasIndex("IdUser");

                    b.ToTable("Spends");
                });

            modelBuilder.Entity("FinanciasPersonalesApiRest.Models.TypeIncomes", b =>
                {
                    b.Property<int>("IdTypeIncomes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTypeIncomes"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTypeIncomes");

                    b.ToTable("TypeIncomes");
                });

            modelBuilder.Entity("FinanciasPersonalesApiRest.Models.TypeSpends", b =>
                {
                    b.Property<int>("IdTypeSpends")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTypeSpends"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTypeSpends");

                    b.ToTable("TypeSpends");
                });

            modelBuilder.Entity("FinanciasPersonalesApiRest.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateRegister")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProfileImagen")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("IdUser");

                    b.ToTable("User");
                });

            modelBuilder.Entity("FinanciasPersonalesApiRest.Models.Budget", b =>
                {
                    b.HasOne("FinanciasPersonalesApiRest.Models.User", "User")
                        .WithMany("UserBudgets")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinanciasPersonalesApiRest.Models.BudgetCategory", b =>
                {
                    b.HasOne("FinanciasPersonalesApiRest.Models.Budget", null)
                        .WithMany("BudgetLists")
                        .HasForeignKey("BudgetIdBudget");
                });

            modelBuilder.Entity("FinanciasPersonalesApiRest.Models.Income", b =>
                {
                    b.HasOne("FinanciasPersonalesApiRest.Models.TypeIncomes", "TypeIncome")
                        .WithMany()
                        .HasForeignKey("IdTypeIncome")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanciasPersonalesApiRest.Models.User", "User")
                        .WithMany("UserIncomes")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeIncome");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinanciasPersonalesApiRest.Models.Spend", b =>
                {
                    b.HasOne("FinanciasPersonalesApiRest.Models.TypeSpends", "TypeSpend")
                        .WithMany()
                        .HasForeignKey("IdTypeSpend")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanciasPersonalesApiRest.Models.User", "User")
                        .WithMany("UserSpends")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeSpend");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinanciasPersonalesApiRest.Models.Budget", b =>
                {
                    b.Navigation("BudgetLists");
                });

            modelBuilder.Entity("FinanciasPersonalesApiRest.Models.User", b =>
                {
                    b.Navigation("UserBudgets");

                    b.Navigation("UserIncomes");

                    b.Navigation("UserSpends");
                });
#pragma warning restore 612, 618
        }
    }
}
